-- Temporal capabilities for tables

-- Logs (Pure SQL appender)
-- Logs can be modified to show a different behaviour, and this
-- table is create to detect that.

ALTER TABLE LOGDATA.LOGS
  ADD COLUMN SYS_START TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS ROW BEGIN IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.LOGS
  ADD COLUMN SYS_END TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS ROW END IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.LOGS
  ADD COLUMN TS_ID TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS TRANSACTION START ID IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.LOGS 
  ADD PERIOD SYSTEM_TIME (SYS_START, SYS_END);

CREATE TABLE LOGDATA.LOGS_HIST 
  LIKE LOGDATA.LOGS 
  IN LOG_DATA_SPACE;

ALTER TABLE LOGDATA.LOGS_HIST 
  PCTFREE 0
  APPEND ON
  VOLATILE CARDINALITY;

COMMENT ON TABLE LOGDATA.LOGS_HIST IS 'Table for modified logs';

ALTER TABLE LOGDATA.LOGS
  ADD VERSIONING 
  USE HISTORY TABLE LOGDATA.LOGS_HIST;

-- Conf_Loggers
-- The temporal capabilities in this table permits to detect any
-- configuration change (system time), and to prepare a special
-- configuration in the future (business time).

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD COLUMN BUS_START TIMESTAMP(12) NOT NULL
  DEFAULT CURRENT TIMESTAMP;

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD COLUMN BUS_END TIMESTAMP(12) NOT NULL
  DEFAULT CURRENT TIMESTAMP;

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD COLUMN SYS_START TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS ROW BEGIN IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD COLUMN SYS_END TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS ROW END IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD COLUMN TS_ID TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS TRANSACTION START ID IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD PERIOD BUSINESS_TIME(BUS_START, BUS_END);

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD PERIOD SYSTEM_TIME (SYS_START, SYS_END);

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD CONSTRAINT UNIK_CFG_LOG
  UNIQUE(LOGGER_ID, BUSINESS_TIME WITHOUT OVERLAPS);

CREATE TABLE LOGDATA.CONF_LOGGERS_HIST
  LIKE LOGDATA.CONF_LOGGERS
  IN LOGGER_SPACE;

ALTER TABLE LOGDATA.CONF_LOGGERS_HIST 
  PCTFREE 0
  APPEND ON
  VOLATILE CARDINALITY;

COMMENT ON TABLE LOGDATA.CONF_LOGGERS_HIST IS 'Table for modified configuration';

ALTER TABLE LOGDATA.CONF_LOGGERS
  ADD VERSIONING 
  USE HISTORY TABLE LOGDATA.CONF_LOGGERS_HIST;

-- Conf_Appenders

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD COLUMN BUS_START TIMESTAMP(12) NOT NULL
  DEFAULT CURRENT TIMESTAMP;

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD COLUMN BUS_END TIMESTAMP(12) NOT NULL
  DEFAULT CURRENT TIMESTAMP;

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD COLUMN SYS_START TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS ROW BEGIN IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD COLUMN SYS_END TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS ROW END IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD COLUMN TS_ID TIMESTAMP(12) NOT NULL GENERATED ALWAYS
  AS TRANSACTION START ID IMPLICITLY HIDDEN;

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD PERIOD BUSINESS_TIME(BUS_START, BUS_END);

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD PERIOD SYSTEM_TIME (SYS_START, SYS_END);

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD CONSTRAINT UNIK_CFG_LOG
  UNIQUE(LOGGER_ID, BUSINESS_TIME WITHOUT OVERLAPS);

CREATE TABLE LOGDATA.CONF_APPENDERS_HIST
  LIKE LOGDATA.CONF_APPENDERS
  IN LOGGER_SPACE;

ALTER TABLE LOGDATA.CONF_APPENDERS_HIST 
  PCTFREE 0
  APPEND ON
  VOLATILE CARDINALITY;

COMMENT ON TABLE LOGDATA.CONF_APPENDERS_HIST IS 'Table for modified configuration';

ALTER TABLE LOGDATA.CONF_APPENDERS
  ADD VERSIONING 
  USE HISTORY TABLE LOGDATA.CONF_APPENDERS_HIST;