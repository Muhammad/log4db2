--#SET TERMINATOR @
SET CURRENT SCHEMA TESTS @

CREATE SCHEMA TESTS @

CREATE OR REPLACE PROCEDURE DIVISION(
  IN NUMERATOR INTEGER,
  IN DENOMINATOR INTEGER,
  OUT RESULT INTEGER
)
BEGIN
 DECLARE LOGGER_ID SMALLINT;
 DECLARE ZERO_DIVISION CONDITION FOR SQLSTATE '22012';
 DECLARE EXIT HANDLER FOR ZERO_DIVISION
  BEGIN
   CALL LOGGER.FATAL(LOGGER_ID, 'Error, SQLSTATE 22012');
   RESIGNAL SQLSTATE 'DIV01';
  END;

 -- Retrieves the Id for the logger of the given name.
 CALL LOGGER.GET_LOGGER('DIVISION', LOGGER_ID);
 
 -- Depending on the Logger configuration, some messages are not logged.
 CALL LOGGER.DEBUG(LOGGER_ID, '> DIVISION');
 
 IF (DENOMINATOR = 0) THEN
  SIGNAL ZERO_DIVISION;
 ELSE
  CALL LOGGER.INFO(LOGGER_ID, 'Dividing');
  SET RESULT = NUMERATOR / DENOMINATOR;
 END IF;
 CALL LOGGER.DEBUG(LOGGER_ID, '< DIVISION');
END @

BEGIN
 DECLARE RESULT INTEGER;
 DECLARE CONTINUE HANDLER FOR SQLSTATE 'DIV01'
    CALL LOGGER.ERROR(0, 'Zero division');
 CALL TESTS.DIVISION(6, 2, RESULT);
 -- The next call raised a signal: DIV01
 CALL TESTS.DIVISION(6, 0, RESULT);
END @

DROP PROCEDURE TESTS.DIVISION( INTEGER, INTEGER, INTEGER ) @

DROP SCHEMA TESTS RESTRICT @