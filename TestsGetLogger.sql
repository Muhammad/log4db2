/**
 * Tests different names for loggers.
 */
--#SET TERMINATOR @
SET CURRENT SCHEMA LOGGER @

BEGIN
-- Reserved names for errors.
DECLARE SQLCODE INTEGER DEFAULT 0;
DECLARE SQLSTATE CHAR(5) DEFAULT '0000';

DECLARE STRING VARCHAR(32);
DECLARE EXPECTED_ID SMALLINT;
DECLARE ACTUAL_ID SMALLINT;
DECLARE LAST_VALUE SMALLINT;

-- For any other SQL State.
DECLARE CONTINUE HANDLER FOR SQLWARNING, SQLEXCEPTION, NOT FOUND
  INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'SQLCode ' || SQLCODE || '-SQLState ' || SQLSTATE);

-- Prepares the environment.
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'TestGetLogger: Preparing environment');

SELECT LOGGER_ID INTO LAST_VALUE FROM FINAL TABLE (
  INSERT INTO CONF_LOGGERS_EFFECTIVE (NAME, PARENT_ID, LEVEL_ID)
  VALUES ('TEST', 0, 0));
DELETE FROM CONF_LOGGERS_EFFECTIVE
  WHERE LOGGER_ID <> 0;

-- Tests empty string.
SET STRING = '';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test01: >' || STRING || '<');
SET EXPECTED_ID = 0;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a whitespace.
SET STRING = ' ';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test02: >' || STRING || '<');
SET EXPECTED_ID = 0;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a dot.
SET STRING = '.';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test03: >' || STRING || '<');
SET EXPECTED_ID = 0;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests two dots.
SET STRING = '..';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test04: >' || STRING || '<');
SET EXPECTED_ID = 0;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a letter.
SET STRING = 'a';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test05: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 1;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a letter followed by a dot.
SET STRING = 'b.';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test06: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 2;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests two valid levels.
SET STRING = 'c.c';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test07: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 4;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a dot preceded by a dot.
SET STRING = '.d';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test08: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 5;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a letter surrrounded by dots.
SET STRING = '.e.';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test09: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 6;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests three valid levels.
SET STRING = 'f.g.h';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test10: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 9;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests three valid levels (multiple letters).
SET STRING = 'ii.jj.kk';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test11: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 12;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a multi letter level.
SET STRING = 'lll';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test12: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 13;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests two multi letters levels.
SET STRING = 'mm.nn';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test13: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 15;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests three multi letters levels.
SET STRING = '111.222.333';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test14: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 18;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Tests a letter surrrounded by spaces.
SET STRING = ' e ';
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Test15: >' || STRING || '<');
SET EXPECTED_ID = LAST_VALUE + 6;
CALL LOGGER.GET_LOGGER(STRING, ACTUAL_ID);
IF (EXPECTED_ID <> ACTUAL_ID) THEN
 INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'Error in test ' || STRING || ' expected ' || EXPECTED_ID || ' ACTUAL ' || COALESCE(ACTUAL_ID,-1));
END IF;

-- Cleans the environment.
DELETE FROM CONF_LOGGERS_EFFECTIVE
  WHERE LOGGER_ID <> 0;
INSERT INTO LOGS VALUES (CURRENT TIMESTAMP, 0, 0, SYSPROC.MON_GET_APPLICATION_ID() || '-' || SESSION_USER, 'TestGetLogger: Finished succesfully');


END @