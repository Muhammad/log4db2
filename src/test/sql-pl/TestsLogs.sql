--#SET TERMINATOR @

/*
Copyright (c) 2012 - 2014, Andres Gomez Casanova (AngocA)
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 1. Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * Tests the log procedure.
 */

SET CURRENT SCHEMA LOGGER_1B @

BEGIN
-- Reserved names for errors.
DECLARE SQLCODE INTEGER DEFAULT 0;
DECLARE SQLSTATE CHAR(5) DEFAULT '00000';

DECLARE APPENDER_ID ANCHOR LOGDATA.CONF_APPENDERS.REF_ID;
DECLARE EXPECTED_MSG ANCHOR LOGDATA.LOGS.MESSAGE;
DECLARE ACTUAL_MSG ANCHOR LOGDATA.LOGS.MESSAGE;
DECLARE LOGGER_ID ANCHOR LOGDATA.CONF_LOGGERS.LOGGER_ID;

-- Controlled SQL State.
DECLARE CONTINUE HANDLER FOR SQLWARNING
  INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (4, 'Warning SQLCode ' || SQLCODE || '-SQLState ' || SQLSTATE);
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (4, 'Exception SQLCode ' || SQLCODE || '-SQLState ' || SQLSTATE);
DECLARE CONTINUE HANDLER FOR NOT FOUND
  INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (5, 'Not found SQLCode ' || SQLCODE || '-SQLState ' || SQLSTATE);

-- Prepares the environment.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (4, 'TestsLogs: Preparing environment');
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS;
COMMIT;

-- Test1: Check message limit.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test1: Check message limit');
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test1', LOGGER_ID);
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('Test1', 1, NULL, '%m');
SELECT MAX(REF_ID) INTO APPENDER_ID
  FROM LOGDATA.CONF_APPENDERS;
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (LOGGER_ID, APPENDER_ID);
CALL LOGGER.DEBUG(LOGGER_ID, '1234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012');
SET EXPECTED_MSG='12345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '123456789012345678901234567890123456789012';
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"', 1, 512));
END IF;
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS
  WHERE REF_ID = APPENDER_ID;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('DB2 Tables', 1, NULL, '[%p] %c - %m');
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (0, (SELECT MAX(REF_ID) FROM LOGDATA.CONF_APPENDERS));
COMMIT;

-- Test2: Check message limit under.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test2: Check message limit under');
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test2', LOGGER_ID);
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('Test2', 1, NULL, '%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m');
SELECT MAX(REF_ID) INTO APPENDER_ID
  FROM LOGDATA.CONF_APPENDERS;
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (LOGGER_ID, APPENDER_ID);
CALL LOGGER.DEBUG(LOGGER_ID, '123456789012345678901234567890');
SET EXPECTED_MSG='12345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890';
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"', 1, 512));
END IF;
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS
  WHERE REF_ID = APPENDER_ID;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('DB2 Tables', 1, NULL, '[%p] %c - %m');
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (0, (SELECT MAX(REF_ID) FROM LOGDATA.CONF_APPENDERS));
COMMIT;

-- Test4: Check message limit equal.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test4: Check message limit equal');
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test4', LOGGER_ID);
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('Test4', 1, NULL, '%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m12');
SELECT MAX(REF_ID) INTO APPENDER_ID
  FROM LOGDATA.CONF_APPENDERS;
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (LOGGER_ID, APPENDER_ID);
CALL LOGGER.DEBUG(LOGGER_ID, '123456789012345678901234567890');
SET EXPECTED_MSG='12345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '123456789012345678901234567890123456789012';
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"', 1, 512));
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || SUBSTR(COALESCE(EXPECTED_MSG, '-'), 450), 1, 512));
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, SUBSTR('Actual   "' || SUBSTR(COALESCE(ACTUAL_MSG, '-') ,450), 1, 512));
END IF;
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS
  WHERE REF_ID = APPENDER_ID;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('DB2 Tables', 1, NULL, '[%p] %c - %m');
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (0, (SELECT MAX(REF_ID) FROM LOGDATA.CONF_APPENDERS));
COMMIT;

-- Test5: Check message limit one more.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test5: Check message limit one more');
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test5', LOGGER_ID);
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('Test5', 1, NULL, '%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m123');
SELECT MAX(REF_ID) INTO APPENDER_ID
  FROM LOGDATA.CONF_APPENDERS;
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (LOGGER_ID, APPENDER_ID);
CALL LOGGER.DEBUG(LOGGER_ID, '123456789012345678901234567890');
SET EXPECTED_MSG='12345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '123456789012345678901234567890123456789012';
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"', 1, 512));
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || SUBSTR(COALESCE(EXPECTED_MSG, '-'), 450), 1, 512));
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, SUBSTR('Actual   "' || SUBSTR(COALESCE(ACTUAL_MSG, '-') ,450), 1, 512));
END IF;
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS
  WHERE REF_ID = APPENDER_ID;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('DB2 Tables', 1, NULL, '[%p] %c - %m');
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (0, (SELECT MAX(REF_ID) FROM LOGDATA.CONF_APPENDERS));
COMMIT;

-- Test6: Check message limit more.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test6: Check message limit more');
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test6', LOGGER_ID);
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('Test6', 1, NULL, '%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m%m');
SELECT MAX(REF_ID) INTO APPENDER_ID
  FROM LOGDATA.CONF_APPENDERS;
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (LOGGER_ID, APPENDER_ID);
CALL LOGGER.DEBUG(LOGGER_ID, '123456789012345678901234567890');
SET EXPECTED_MSG='12345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '1234567890123456789012345678901234567890123456789012345678901234567890'
  || '123456789012345678901234567890123456789012';
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"', 1, 512));
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, SUBSTR('Expected "' || SUBSTR(COALESCE(EXPECTED_MSG, '-'), 450), 1, 512));
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES
   (GENERATE_UNIQUE(), 2, SUBSTR('Actual   "' || SUBSTR(COALESCE(ACTUAL_MSG, '-') ,450), 1, 512));
END IF;
DELETE FROM LOGDATA.REFERENCES;
DELETE FROM LOGDATA.CONF_APPENDERS
  WHERE REF_ID = APPENDER_ID;
DELETE FROM LOGDATA.CONF_LOGGERS WHERE LOGGER_ID <> 0;
INSERT INTO LOGDATA.CONF_APPENDERS (NAME, APPENDER_ID, CONFIGURATION, PATTERN)
  VALUES ('DB2 Tables', 1, NULL, '[%p] %c - %m');
INSERT INTO LOGDATA.REFERENCES (LOGGER_ID, APPENDER_REF_ID)
  VALUES (0, (SELECT MAX(REF_ID) FROM LOGDATA.CONF_APPENDERS));
COMMIT;

-- Test7: Check null logger_id.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test7: Check null logger_id');
SET LOGGER_ID = NULL;
CALL LOGGER.LOG(LOGGER_ID, 5, 'Test7');
COMMIT;

-- Test8: Check just message.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test8: Check just message');
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[WARN ] ROOT - Test8';
CALL LOGGER.LOG(MESSAGE => 'Test8');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%WARN%Test8%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test9: Check message and logger.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test9: Check message and logger');
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test9', LOGGER_ID);
SET EXPECTED_MSG='[WARN ] Test9 - Message';
CALL LOGGER.LOG(LOGGER_ID, MESSAGE => 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%WARN%Test9%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test10: Check message and logger with param name.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test10: Check message and logger with param name');
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test10', LOGGER_ID);
SET EXPECTED_MSG='[WARN ] Test10 - Message';
CALL LOGGER.LOG(MESSAGE => 'Message', LOG_ID => LOGGER_ID);
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%WARN%Test10%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test11: Check message and level with param name.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test11: Check message and level with param name');
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test11', LOGGER_ID);
SET EXPECTED_MSG='[ERROR] ROOT - Message';
CALL LOGGER.LOG( MESSAGE => 'Message', LEV_ID => 2);
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%ERROR%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test12: Check message, level and logger with param name.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test12: Check message, level and logger with param name');
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test12', LOGGER_ID);
SET EXPECTED_MSG='[DEBUG] Test12 - Message';
CALL LOGGER.LOG(MESSAGE => 'Message', LEV_ID => 5, LOG_ID => LOGGER_ID);
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%DEBUG%Test12%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test13: Check all null.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test13: Check all null');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test13', LOGGER_ID);
SET EXPECTED_MSG='[WARN ] ROOT - No message';
CALL LOGGER.LOG(NULL, NULL, NULL);
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%WARN%ROOT%No message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test14: Check log_id null.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test14: Check log_id null');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[ERROR] ROOT - Message';
CALL LOGGER.LOG(NULL, 2, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%ERROR%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test15: Check lev_id null.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test15: Check lev_id null');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[WARN ] ROOT - Message';
CALL LOGGER.LOG(0, NULL, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '%WARN%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test16: Check non existent log_id.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test16: Check non existent log_id');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[INFO ] ROOT - Message';
CALL LOGGER.LOG(32767, 4, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '[INFO%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test17: Check negative log_id.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test17: Check negative log_id');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[DEBUG] ROOT - Message';
CALL LOGGER.LOG(-2, 5, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '[DEBUG%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test18: Check inexistant lev_id.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test18: Check inexistant lev_id');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[WARN ] ROOT - Message';
CALL LOGGER.LOG(0, 32767, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '[WARN%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test19: Check negative lev_id.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test19: Check negative lev_id');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='[WARN ] ROOT - Message';
CALL LOGGER.LOG(0, -1, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '[WARN%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test20: Check 0 lev_id.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test20: Check 0 lev_id');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
SET EXPECTED_MSG='Test20: Check 0 lev_id';
CALL LOGGER.LOG(0, 0, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '[ERROR%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Test21: Check both null.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'Test21: Check both null');
SET ACTUAL_MSG = NULL;
UPDATE LOGDATA.CONF_LOGGERS
  SET LEVEL_ID = 5
  WHERE LOGGER_ID = 0;
CALL LOGGER.GET_LOGGER('Test21', LOGGER_ID);
SET EXPECTED_MSG='[WARN ] ROOT - Message';
CALL LOGGER.LOG(NULL, NULL, 'Message');
SELECT MESSAGE INTO ACTUAL_MSG
  FROM LOGS
  WHERE DATE = (SELECT MAX(DATE)
    FROM LOGS);
IF (EXPECTED_MSG <> ACTUAL_MSG) THEN
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Different msg');
 INSERT INTO LOGDATA.LOGS (DATE, LEVEL_ID, MESSAGE) VALUES 
   (GENERATE_UNIQUE(), 2, 'Expected "' || COALESCE(EXPECTED_MSG, '-') || '" actual "' || COALESCE(ACTUAL_MSG, '-') || '"');
END IF;
DELETE FROM LOGDATA.LOGS
  WHERE MESSAGE LIKE '[WARN%ROOT%Message%'
  AND DATE = (SELECT MAX(DATE) FROM LOGDATA.LOGS);
COMMIT;

-- Cleans the environment.
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'TestsLogs: Cleaning environment');
INSERT INTO LOGDATA.LOGS (LEVEL_ID, MESSAGE) VALUES (3, 'TestsLogs: Finished succesfully');
COMMIT;

END@
