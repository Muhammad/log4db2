--#SET TERMINATOR @

/**
 * Tests for cascade calls.
 */

SET CURRENT SCHEMA TESTS @

DROP MODULE TESTS @

DROP SCHEMA TESTS RESTRICT @

CREATE SCHEMA TESTS @

CREATE MODULE TESTS @

-- Tests the quantity of logging level used.
ALTER MODULE TESTS PUBLISH PROCEDURE LOGGING (IN VAL SMALLINT) @

ALTER MODULE TESTS ADD PROCEDURE LOGGING (IN VAL SMALLINT)
BEGIN
 CALL LOGGER.ERROR(0, 'Cascade call for "LOGGING" enters with ' || COALESCE(VAL, -1));
 COMMIT;
 CALL TESTS.LOGGING(VAL + 1);
END @

-- Tests the quantity of level used for getting the logger.
ALTER MODULE TESTS PUBLISH PROCEDURE LOG_ID (IN VAL SMALLINT) @

ALTER MODULE TESTS ADD PROCEDURE LOG_ID (IN VAL SMALLINT)
BEGIN
 DECLARE LOGGER_ID SMALLINT;
 CALL LOGGER_1A.LOGGER.GET_LOGGER('TESTS',LOGGER_ID);
 CALL LOGGER.ERROR(LOGGER_ID, 'Cascade call for "LOG_ID" enters with ' || COALESCE(VAL, -1));
 COMMIT;
 CALL TESTS.LOG_ID(VAL + 1);
END @

-- Tests the quantity of level used for getting the logger with multiple names.
ALTER MODULE TESTS PUBLISH PROCEDURE LOG_ID_MULT (IN VAL SMALLINT) @

ALTER MODULE TESTS ADD PROCEDURE LOG_ID_MULT (IN VAL SMALLINT)
BEGIN
 DECLARE LOGGER_ID SMALLINT;
 CALL LOGGER_1A.LOGGER.GET_LOGGER('TESTS.TESTS.LOG_ID_MULT',LOGGER_ID);
 CALL LOGGER.ERROR(LOGGER_ID, 'Cascade call for "LOG_ID_MULT" enters with ' || COALESCE(VAL, -1));
 COMMIT;
 CALL TESTS.LOG_ID_MULT(VAL + 1);
END @

CALL TESTS.LOGGING(1)@